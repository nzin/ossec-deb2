#!/bin/sh
# OSSEC	        Controls OSSEC HIDS
# Author:       Daniel B. Cid <dcid@ossec.net>
# Modified for slackware by Jack S. Lai
# Modified for Debian by Javier Fernandez-Sanguino
#
# OSSEC HIDS is a free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License (version 2) as
# published by the FSF - Free Software Foundation.

### BEGIN INIT INFO
# Provides:          ossec-hids
# Required-Start:    $time $network $local_fs $remote_fs
# Required-Stop:     $network $remote_fs
# Should-Start:      $syslog
# Should-Stop:       
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Host-based intrusion detection system
# Description:       Host-based intrusion detection system that will
#                    perform log analysis, file integrity checking, policy
#                    monitoring, rootkit detection, real-time alerting and
#                    active response. 
### END INIT INFO

PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin

test $DEBIAN_SCRIPT_DEBUG && set -v -x

DAEMON=ossec-hids
NAME=ossec
DESC="Host-based Intrusion Detection System"

. /lib/lsb/init-functions

[ -e /etc/ossec-init.conf ] && . /etc/ossec-init.conf
if [ "X${DIRECTORY}" = "X" ]; then
    DIRECTORY="/var/ossec"
fi

# If we don't find DIRECTORY then exit without error, the
# package is not installed
[ ! -e "${DIRECTORY}" ] && exit 0

    
start() {
       [ -n "$DEBIAN_SCRIPT_DEBUG" ] && OUT=">/dev/null"
	${DIRECTORY}/bin/ossec-control start $OUT
       return $?
}

stop() {
       [ -n "$DEBIAN_SCRIPT_DEBUG" ] && OUT=">/dev/null"
	${DIRECTORY}/bin/ossec-control stop
       return $?
}

status() {
       [ -n "$DEBIAN_SCRIPT_DEBUG" ] && OUT=">/dev/null"
	${DIRECTORY}/bin/ossec-control status
       return $?
}


case "$1" in
  start)
        log_daemon_msg "Starting $DESC " "$NAME"
	start
        myret=$?
        if  [ $myret -eq 0 ] ; then
            log_end_msg 0
        else
            log_end_msg 1
        fi
        exit $myret
	;;
  stop) 
        log_daemon_msg "Stopping $DESC " "$NAME"
	stop
        myret=$?
        if  [ $myret -eq 0 ] ; then
            log_end_msg 0
        else
            log_end_msg 1
        fi
        exit $myret
	;;
  restart|force-restart|reload|force-reload)
        $0 stop
	$0 start
	;;
  status)
        log_daemon_msg "Status of $NAME"
        status
        myret=$?
        if  [ $myret -eq 0 ] ; then
            log_end_msg 0
        else
            log_end_msg 1
        fi
        exit $myret
	;;
  *)
	echo "Usage: $0 {start|stop|restart|force-restart|reload|force-reload|status}"
	exit 1
esac

exit 0
